function reportViewAttachEmail(viewReport, emailReport, aaReportName, fromAddress, toAddress, ccAddress, emailSubject, emailContent, copyToParent, systemEmail) {	logDebug("<u>Request Information:</u>");	logDebug("view = " +  viewReport);	logDebug("email = " +  emailReport);	logDebug("reportName = " +  aaReportName);	logDebug("SystemEmail = " +  systemEmail);	logDebug("<BR><u>Email Information:</u>");	logDebug("emailFrom = " +  fromAddress);	logDebug("emailTo = " +  toAddress);	logDebug("emailCC = " +  ccAddress);	logDebug("emailSubject = " +  emailSubject);	logDebug("emailContent = <br>" +  emailContent);	var name = "";	var tmpCapIDString = "";	tmpCapIDString = capIDString;	var sca = String(capId).split("-");	var thisCapId = aa.cap.getCapID(sca[0],sca[1],sca[2]).getOutput();	if(thisCapId != null){		capIDString = thisCapId.getCustomID();	}	logDebug("This process is being run for <b>" + capIDString + "</b>");	var reportModel = aa.reportManager.getReportModelByName(aaReportName);	if (reportModel.getSuccess()) {		reportDetail = reportModel.getOutput();		var name = reportDetail.getReportDescription();		if (name == null || name == "") { 			name = reportDetail.getReportName();		}		logDebug("Report Name for attaching to record(found in Report Manager Description) = " + name);		var reportInfoModel = aa.reportManager.getReportInfoModelByName(aaReportName);		if (reportInfoModel.getSuccess()) { 			report = reportInfoModel.getOutput();			report.setModule(appTypeArray[0]);			report.setCapId(capId);			reportInfo = report.getReportInfoModel();			if (reportDetail.getReportType().equals("URL_Report")) {				parameters = aa.util.newHashMap(); 				parameters.put("val1", capIDString);			} else {				parameters = aa.util.newHashMap();				parameters.put("AltID", capIDString);			}			report.setReportParameters(parameters);			if (viewReport == true) {				reportRun = aa.reportManager.runReport(parameters, reportDetail);				aa.env.setValue("ScriptReturnCode", "0"); 				aa.env.setValue("ScriptReturnMessage", reportRun.getOutput());			}			if (emailReport == true) {				fromAddress = fromAddress.toLowerCase();				toAddress = toAddress.toLowerCase();				ccAddress = ccAddress.toLowerCase();				var scriptCode = "SendReportAsync"; 				var envParameters = aa.util.newHashMap();				envParameters.put ("Report", report);				envParameters.put ("ReportName", name);								envParameters.put ("EmailFrom", fromAddress);				envParameters.put ("EmailTo", toAddress);				envParameters.put ("EmailCC", ccAddress);				envParameters.put ("EmailSubject", emailSubject);				envParameters.put ("EmailContent", emailContent); 				envParameters.put ("SystemEmail", systemEmail);				aa.runAsyncScript(scriptCode, envParameters);                aa.sendMail("noreply@cityofmadison.com","nobody@cityofmadison.com", "", "Email sent",emailContent);			}			if(copyToParent){				 moveToParent();			}		} else {			logDebug("Failed to get Report Information Model.  Check report name entered matches Name in Report Manager.");			aa.sendMail("noreply@cityofmadison.com","elamsupport@cityofmadison.com","", "Errors occurs in Creating Report", debug);			return false;					}	} else {        capIDString = tmpCapIDString;			logDebug("Failed to get Report Manager Model.  Check report name entered matches Name in Report Manager.");		aa.sendMail("noreply@cityofmadison.com","elamsupport@cityofmadison.com","", "Errors occurs in Creating Report", debug);		return false;	}    capIDString = tmpCapIDString;}