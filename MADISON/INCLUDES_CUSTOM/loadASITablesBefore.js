function loadASITablesBefore() { 	var gm = aa.env.getValue("AppSpecificTableGroupModel"); 	if(null != gm && gm.length > 0){ 		var ta = gm.getTablesMap().values(); 		var tai = ta.iterator(); 		while (tai.hasNext()) 		{ 			var tsm = tai.next(); 			if (tsm.rowIndex.isEmpty()) continue; 			var tempObject = new Array(); 			var tempArray = new Array(); 			var tn = tsm.getTableName(); 			var numrows = 0; 			tn = String(tn).replace(/[^a-zA-Z0-9]+/g,''); 			if (!isNaN(tn.substring(0,1))) tn = "TBL" + tn 			if (!tsm.rowIndex.isEmpty()) 			{ 				var tsmfldi = tsm.getTableField().iterator(); 				var tsmcoli = tsm.getColumns().iterator(); 				var numrows = 1; 				while (tsmfldi.hasNext())				{ 					if (!tsmcoli.hasNext()) 					{ 						var tsmcoli = tsm.getColumns().iterator(); 						tempArray.push(tempObject);  						var tempObject = new Array();						numrows++; 					} 					var tcol = tsmcoli.next(); 					var tval = tsmfldi.next(); 					var readOnly = 'N'; 					var fieldInfo = new 					asiTableValObj(tcol.getColumnName(), tval, readOnly); 					tempObject[tcol.getColumnName()] = fieldInfo; 				} 				tempArray.push(tempObject);  			} 			var copyStr = "" + tn + " = tempArray"; 			eval(copyStr); 		} 	} } 