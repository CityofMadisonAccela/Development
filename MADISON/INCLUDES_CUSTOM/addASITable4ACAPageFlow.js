function addASITable4ACAPageFlow(destinationTableGroupModel,tableName,tableValueArray) {  	var ta = destinationTableGroupModel.getTablesMap().values();  	var tai = ta.iterator();  	var found = false;  	while (tai.hasNext())  		  {  		  var tsm = tai.next();   		  if (tsm.getTableName().equals(tableName)) { found = true; break; }  	          }  	if (!found) { logDebug("cannot update asit for ACA, no matching table name"); return false; }	var fld = aa.util.newArrayList();         var fld_readonly = aa.util.newArrayList();   	var i = 0;         for (thisrow in tableValueArray)  		{  		var col = tsm.getColumns();  		var coli = col.iterator();  		while (coli.hasNext())  			{  			var colname = coli.next();                debug+= "String!!!";   				var args = new Array(tableValueArray[thisrow][colname.getColumnName()],colname);				var fldToAdd = aa.proxyInvoker.newInstance("com.accela.aa.aamain.appspectable.AppSpecificTableField",args).getOutput();				fldToAdd.setRowIndex(i);				fldToAdd.setFieldLabel(colname.getColumnName());				fldToAdd.setFieldGroup(tableName.replace(/ /g,"\+"));                                if(colname.getColumnName().equals("Current No. of Employees")                                || colname.getColumnName().equals("Job Category")                                    || colname.getColumnName().equals("Percent 1 year ago")                                    || colname.getColumnName().equals("Percent Current")                                || colname.getColumnName().equals("Percent Target"))                                    fldToAdd.setReadOnly(true);                                else				    fldToAdd.setReadOnly(false);				fld.add(fldToAdd);				fld_readonly.add("N");  			}  		i++;  		tsm.setTableFields(fld);  		tsm.setReadonlyField(fld_readonly);  		}        return destinationTableGroupModel;    	}