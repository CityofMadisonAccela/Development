function loadASITables4ACA() {	var numrows = 0;	var itemCap = capId;	if (arguments.length == 1) {		itemCap = arguments[0]; 		var gm = aa.appSpecificTableScript.getAppSpecificTableGroupModel(itemCap).getOutput();	} else {		var gm = cap.getAppSpecificTableGroupModel();	}	var ta = gm.getTablesMap();	var tai = ta.values().iterator();	while (tai.hasNext()) {		var tsm = tai.next();		if (!tsm.rowIndex.isEmpty()) {			var tempObject = new Array();			var tempArray = new Array();			var tn = tsm.getTableName();			tn = String(tn).replace(/[^a-zA-Z0-9]+/g,'');			if (!isNaN(tn.substring(0,1))) { tn = "TBL" + tn; } 			var tsmfldi = tsm.getTableField().iterator();			var tsmcoli = tsm.getColumns().iterator();			numrows = 1;			while (tsmfldi.hasNext()) {				if (!tsmcoli.hasNext()) {					var tsmcoli = tsm.getColumns().iterator();					tempArray.push(tempObject);					var tempObject = new Array();					numrows++;				}				var tcol = tsmcoli.next();				var tval = tsmfldi.next().getInputValue();				tempObject[tcol.getColumnName()] = tval;			}			tempArray.push(tempObject);			var copyStr = "" + tn + " = tempArray";			logDebug("ASI Table Array : " + tn + " (" + numrows + " Rows)");			eval(copyStr);		} else {			logDebug("ASI Table Array : No table.");		}	}	return numrows;}